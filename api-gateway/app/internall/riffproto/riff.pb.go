// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: riff.proto

package riffproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Style int32

const (
	Style_UNSPECIFIED Style = 0
	Style_ROCK        Style = 1
	Style_BLUES       Style = 2
	Style_METAL       Style = 3
	Style_JAZZ        Style = 4
	Style_FUNK        Style = 5
)

// Enum value maps for Style.
var (
	Style_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ROCK",
		2: "BLUES",
		3: "METAL",
		4: "JAZZ",
		5: "FUNK",
	}
	Style_value = map[string]int32{
		"UNSPECIFIED": 0,
		"ROCK":        1,
		"BLUES":       2,
		"METAL":       3,
		"JAZZ":        4,
		"FUNK":        5,
	}
)

func (x Style) Enum() *Style {
	p := new(Style)
	*p = x
	return p
}

func (x Style) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Style) Descriptor() protoreflect.EnumDescriptor {
	return file_riff_proto_enumTypes[0].Descriptor()
}

func (Style) Type() protoreflect.EnumType {
	return &file_riff_proto_enumTypes[0]
}

func (x Style) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Style.Descriptor instead.
func (Style) EnumDescriptor() ([]byte, []int) {
	return file_riff_proto_rawDescGZIP(), []int{0}
}

type RiffRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tone          string                 `protobuf:"bytes,1,opt,name=tone,proto3" json:"tone,omitempty"`
	Style         Style                  `protobuf:"varint,2,opt,name=style,proto3,enum=riff.Style" json:"style,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiffRequest) Reset() {
	*x = RiffRequest{}
	mi := &file_riff_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiffRequest) ProtoMessage() {}

func (x *RiffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_riff_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiffRequest.ProtoReflect.Descriptor instead.
func (*RiffRequest) Descriptor() ([]byte, []int) {
	return file_riff_proto_rawDescGZIP(), []int{0}
}

func (x *RiffRequest) GetTone() string {
	if x != nil {
		return x.Tone
	}
	return ""
}

func (x *RiffRequest) GetStyle() Style {
	if x != nil {
		return x.Style
	}
	return Style_UNSPECIFIED
}

type RiffResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Riff          string                 `protobuf:"bytes,1,opt,name=riff,proto3" json:"riff,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiffResponse) Reset() {
	*x = RiffResponse{}
	mi := &file_riff_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiffResponse) ProtoMessage() {}

func (x *RiffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_riff_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiffResponse.ProtoReflect.Descriptor instead.
func (*RiffResponse) Descriptor() ([]byte, []int) {
	return file_riff_proto_rawDescGZIP(), []int{1}
}

func (x *RiffResponse) GetRiff() string {
	if x != nil {
		return x.Riff
	}
	return ""
}

var File_riff_proto protoreflect.FileDescriptor

const file_riff_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"riff.proto\x12\x04riff\"D\n" +
	"\vRiffRequest\x12\x12\n" +
	"\x04tone\x18\x01 \x01(\tR\x04tone\x12!\n" +
	"\x05style\x18\x02 \x01(\x0e2\v.riff.StyleR\x05style\"\"\n" +
	"\fRiffResponse\x12\x12\n" +
	"\x04riff\x18\x01 \x01(\tR\x04riff*L\n" +
	"\x05Style\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\b\n" +
	"\x04ROCK\x10\x01\x12\t\n" +
	"\x05BLUES\x10\x02\x12\t\n" +
	"\x05METAL\x10\x03\x12\b\n" +
	"\x04JAZZ\x10\x04\x12\b\n" +
	"\x04FUNK\x10\x052F\n" +
	"\rRiffGenerator\x125\n" +
	"\fGenerateRiff\x12\x11.riff.RiffRequest\x1a\x12.riff.RiffResponseB\x15Z\x13internall/riffprotob\x06proto3"

var (
	file_riff_proto_rawDescOnce sync.Once
	file_riff_proto_rawDescData []byte
)

func file_riff_proto_rawDescGZIP() []byte {
	file_riff_proto_rawDescOnce.Do(func() {
		file_riff_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_riff_proto_rawDesc), len(file_riff_proto_rawDesc)))
	})
	return file_riff_proto_rawDescData
}

var file_riff_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_riff_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_riff_proto_goTypes = []any{
	(Style)(0),           // 0: riff.Style
	(*RiffRequest)(nil),  // 1: riff.RiffRequest
	(*RiffResponse)(nil), // 2: riff.RiffResponse
}
var file_riff_proto_depIdxs = []int32{
	0, // 0: riff.RiffRequest.style:type_name -> riff.Style
	1, // 1: riff.RiffGenerator.GenerateRiff:input_type -> riff.RiffRequest
	2, // 2: riff.RiffGenerator.GenerateRiff:output_type -> riff.RiffResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_riff_proto_init() }
func file_riff_proto_init() {
	if File_riff_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_riff_proto_rawDesc), len(file_riff_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_riff_proto_goTypes,
		DependencyIndexes: file_riff_proto_depIdxs,
		EnumInfos:         file_riff_proto_enumTypes,
		MessageInfos:      file_riff_proto_msgTypes,
	}.Build()
	File_riff_proto = out.File
	file_riff_proto_goTypes = nil
	file_riff_proto_depIdxs = nil
}
