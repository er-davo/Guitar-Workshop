// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: onsets_and_frames.proto

package onsets_frames

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OAFRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AudioData     *AudioFileData         `protobuf:"bytes,1,opt,name=audio_data,json=audioData,proto3" json:"audio_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OAFRequest) Reset() {
	*x = OAFRequest{}
	mi := &file_onsets_and_frames_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OAFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAFRequest) ProtoMessage() {}

func (x *OAFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_onsets_and_frames_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAFRequest.ProtoReflect.Descriptor instead.
func (*OAFRequest) Descriptor() ([]byte, []int) {
	return file_onsets_and_frames_proto_rawDescGZIP(), []int{0}
}

func (x *OAFRequest) GetAudioData() *AudioFileData {
	if x != nil {
		return x.AudioData
	}
	return nil
}

type OAFResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notes         []*NoteEvent           `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OAFResponse) Reset() {
	*x = OAFResponse{}
	mi := &file_onsets_and_frames_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OAFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAFResponse) ProtoMessage() {}

func (x *OAFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_onsets_and_frames_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAFResponse.ProtoReflect.Descriptor instead.
func (*OAFResponse) Descriptor() ([]byte, []int) {
	return file_onsets_and_frames_proto_rawDescGZIP(), []int{1}
}

func (x *OAFResponse) GetNotes() []*NoteEvent {
	if x != nil {
		return x.Notes
	}
	return nil
}

type AudioFileData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	AudioBytes    []byte                 `protobuf:"bytes,2,opt,name=audio_bytes,json=audioBytes,proto3" json:"audio_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioFileData) Reset() {
	*x = AudioFileData{}
	mi := &file_onsets_and_frames_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioFileData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioFileData) ProtoMessage() {}

func (x *AudioFileData) ProtoReflect() protoreflect.Message {
	mi := &file_onsets_and_frames_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioFileData.ProtoReflect.Descriptor instead.
func (*AudioFileData) Descriptor() ([]byte, []int) {
	return file_onsets_and_frames_proto_rawDescGZIP(), []int{2}
}

func (x *AudioFileData) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *AudioFileData) GetAudioBytes() []byte {
	if x != nil {
		return x.AudioBytes
	}
	return nil
}

type NoteEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OnsetSeconds  float32                `protobuf:"fixed32,1,opt,name=onset_seconds,json=onsetSeconds,proto3" json:"onset_seconds,omitempty"` // Время начала ноты
	MidiPitch     int32                  `protobuf:"varint,2,opt,name=midi_pitch,json=midiPitch,proto3" json:"midi_pitch,omitempty"`           // Например, 40 = E2, 64 = E4 и т.д.
	Velocity      float32                `protobuf:"fixed32,3,opt,name=velocity,proto3" json:"velocity,omitempty"`                             // Громкость/интенсивность (если доступно)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoteEvent) Reset() {
	*x = NoteEvent{}
	mi := &file_onsets_and_frames_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteEvent) ProtoMessage() {}

func (x *NoteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_onsets_and_frames_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteEvent.ProtoReflect.Descriptor instead.
func (*NoteEvent) Descriptor() ([]byte, []int) {
	return file_onsets_and_frames_proto_rawDescGZIP(), []int{3}
}

func (x *NoteEvent) GetOnsetSeconds() float32 {
	if x != nil {
		return x.OnsetSeconds
	}
	return 0
}

func (x *NoteEvent) GetMidiPitch() int32 {
	if x != nil {
		return x.MidiPitch
	}
	return 0
}

func (x *NoteEvent) GetVelocity() float32 {
	if x != nil {
		return x.Velocity
	}
	return 0
}

var File_onsets_and_frames_proto protoreflect.FileDescriptor

const file_onsets_and_frames_proto_rawDesc = "" +
	"\n" +
	"\x17onsets_and_frames.proto\x12\fonsetsframes\"H\n" +
	"\n" +
	"OAFRequest\x12:\n" +
	"\n" +
	"audio_data\x18\x01 \x01(\v2\x1b.onsetsframes.AudioFileDataR\taudioData\"<\n" +
	"\vOAFResponse\x12-\n" +
	"\x05notes\x18\x01 \x03(\v2\x17.onsetsframes.NoteEventR\x05notes\"M\n" +
	"\rAudioFileData\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12\x1f\n" +
	"\vaudio_bytes\x18\x02 \x01(\fR\n" +
	"audioBytes\"k\n" +
	"\tNoteEvent\x12#\n" +
	"\ronset_seconds\x18\x01 \x01(\x02R\fonsetSeconds\x12\x1d\n" +
	"\n" +
	"midi_pitch\x18\x02 \x01(\x05R\tmidiPitch\x12\x1a\n" +
	"\bvelocity\x18\x03 \x01(\x02R\bvelocity2Q\n" +
	"\x0fOnsetsAndFrames\x12>\n" +
	"\aAnalyze\x12\x18.onsetsframes.OAFRequest\x1a\x19.onsetsframes.OAFResponseB\x1eZ\x1cinternal/proto/onsets-framesb\x06proto3"

var (
	file_onsets_and_frames_proto_rawDescOnce sync.Once
	file_onsets_and_frames_proto_rawDescData []byte
)

func file_onsets_and_frames_proto_rawDescGZIP() []byte {
	file_onsets_and_frames_proto_rawDescOnce.Do(func() {
		file_onsets_and_frames_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_onsets_and_frames_proto_rawDesc), len(file_onsets_and_frames_proto_rawDesc)))
	})
	return file_onsets_and_frames_proto_rawDescData
}

var file_onsets_and_frames_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_onsets_and_frames_proto_goTypes = []any{
	(*OAFRequest)(nil),    // 0: onsetsframes.OAFRequest
	(*OAFResponse)(nil),   // 1: onsetsframes.OAFResponse
	(*AudioFileData)(nil), // 2: onsetsframes.AudioFileData
	(*NoteEvent)(nil),     // 3: onsetsframes.NoteEvent
}
var file_onsets_and_frames_proto_depIdxs = []int32{
	2, // 0: onsetsframes.OAFRequest.audio_data:type_name -> onsetsframes.AudioFileData
	3, // 1: onsetsframes.OAFResponse.notes:type_name -> onsetsframes.NoteEvent
	0, // 2: onsetsframes.OnsetsAndFrames.Analyze:input_type -> onsetsframes.OAFRequest
	1, // 3: onsetsframes.OnsetsAndFrames.Analyze:output_type -> onsetsframes.OAFResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_onsets_and_frames_proto_init() }
func file_onsets_and_frames_proto_init() {
	if File_onsets_and_frames_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_onsets_and_frames_proto_rawDesc), len(file_onsets_and_frames_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_onsets_and_frames_proto_goTypes,
		DependencyIndexes: file_onsets_and_frames_proto_depIdxs,
		MessageInfos:      file_onsets_and_frames_proto_msgTypes,
	}.Build()
	File_onsets_and_frames_proto = out.File
	file_onsets_and_frames_proto_goTypes = nil
	file_onsets_and_frames_proto_depIdxs = nil
}
